# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: Python CI

on:
  push:
    branches: [master, beta]
  pull_request:
    branches: [master, beta]

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        os: [ubuntu-24.04]
    runs-on: ${{matrix.os}}
    steps:
      # Checkout repo and set up python
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      # Install and configure poetry
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Set up local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      # Load cached venv if it exists
      - name: Cache packages
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          # This path is specific to ubuntu
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      # Install dependencies of cache does not exist
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y qt6-base-dev libsystemd-dev gcc
      - name: Install Poetry dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --sync --no-interaction
      # Build and test Yin-Yang
      - name: Compile ui, translations and resources
        run: poetry run ./scripts/build_ui.sh
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest -v
